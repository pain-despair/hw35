const userData = {
	USD: 1000,
	EUR: 900,
	UAH: 15000,
	BIF: 20000,
	AOA: 100
};

const bankData = {
    USD: {
        max: 3000,
        min: 100,
        img: 'üíµ'
    },
    EUR: {
        max: 1000,
        min: 50,
        img: 'üí∂'
    },
    UAH: {
        max: 0,
        min: 0,
        img: 'üí¥'
    },
    GBP: {
        max: 10000,
        min: 100,
        img: 'üí∑'
    }
};

function getMoney() {
    return new Promise((resolve, reject) => {
        const answer = prompt('–ü–æ–¥–∏–≤–∏—Ç–∏—Å—è –±–∞–ª–∞–Ω—Å –∫–∞—Ä—Ç—ñ? (—Ç–∞–∫/–Ω—ñ)');
        if (answer.toLowerCase() === '—Ç–∞–∫') {
            const currency = prompt('–í–≤–µ–¥—ñ—Ç—å –≤–∞–ª—é—Ç—É (USD, EUR, UAH, BIF, AOA):');
            if (currency in userData) {
                console.log(`–ë–∞–ª–∞–Ω—Å —Å—Ç–∞–Ω–æ–≤–∏—Ç—å: ${userData[currency]} ${currency}`);
                resolve();
            } else {
                console.log('–î–∞–Ω–∞ –≤–∞–ª—é—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤–∞—Å.');
                reject();
            }
        } else if (answer.toLowerCase() === '–Ω—ñ') {
            const currency = prompt('–í–≤–µ–¥—ñ—Ç—å –≤–∞–ª—é—Ç—É –¥–ª—è –∑–Ω—è—Ç—Ç—è (USD, EUR, UAH, GBP):');
            if (currency in userData && currency in bankData && bankData[currency].max !== 0) {
                const amount = Number(prompt(`–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É –¥–ª—è –∑–Ω—è—Ç—Ç—è (${bankData[currency].min} - ${bankData[currency].max}):`));
                if (amount > bankData[currency].max) {
                    console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –±—ñ–ª—å—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${bankData[currency].max}`);
                    reject();
                } else if (amount < bankData[currency].min) {
                    console.log(`–í–≤–µ–¥–µ–Ω–∞ —Å—É–º–∞ –º–µ–Ω—à–∞ –∑–∞ –¥–æ—Å—Ç—É–ø–Ω—É. –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑–Ω—è—Ç—Ç—è: ${bankData[currency].min}`);
                    reject();
                } else if (amount > userData[currency]) {
                    console.log(`–í–∏ –≤–≤–µ–ª–∏ —Å—É–º—É –±—ñ–ª—å—à—É –∑–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å —É –≤–∞–ª—é—Ç—ñ ${currency}`);
                    reject();
                } else {
                    console.log(`–û—Ç –í–∞—à—ñ –≥—Ä–æ—à—ñ ${amount} ${currency} ${bankData[currency].img}`);
                    resolve();
                }
            } else {
                console.log('–î–∞–Ω–∞ –≤–∞–ª—é—Ç–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –¥–ª—è –≤–∞—Å –∞–±–æ –¥–ª—è –∑–Ω—è—Ç—Ç—è.');
                reject();
            }
        } else {
            console.log('–ù–µ–≤—ñ—Ä–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å.');
            reject();
        }
    });
}

getMoney()
    .then(() => console.log('–î—è–∫—É—é, –≥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è üòä'))
    .catch(() => console.log('–î—è–∫—É—é, –≥–∞—Ä–Ω–æ–≥–æ –¥–Ω—è üòä'));